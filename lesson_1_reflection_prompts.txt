How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I only needed to check the difference to find the bug, not the entire document.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can easily compare any two versions of the document, and revert back in time if necessary.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: It creates milestones reflecting only the meaningful change in the code.
    Cons: I need to do it manually, and the “meaningful” part is subjective.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    The files might be related to each other, e.g. functions working on a new functionality.

How can you use the commands git log and git diff to view the history of files?

    log: gives the list of changes with a message. with option —-stat you can also see number of additions deletions and how many files has been changed.

    diff: this requires ids to compare two commits in time. will give you the details of the changes.

How might using version control make you more confident to make changes that
could break something?

    It provides you to option to revert any changes back in time, so that you can find the bugs/problems introduced throughout time.
    It allows you to introduce a lot of changes to your code without fear of ruining it.

Now that you have your workspace set up, what do you want to try using Git for?

    simple repository
